###############################
# DEFAULT 
###############################
enabled: true
developer: false
grpc: false
scheduler: false
worker: false
rest: true
name: console-api-v2
replicas: 1
image:
    name: spaceone/console-api-v2
    version: latest
imagePullPolicy: IfNotPresent

resources: {}
#     grpc: 
#         requests:
#             memory: "128Mi"
#             cpu: "25m"
#         limits:
#             memory: "256Mi"
#             cpu: "50m"
#     rest: 
#         requests:
#             memory: "128Mi"
#             cpu: "25m"
#         limits:
#             memory: "256Mi"
#             cpu: "50m"
#     scheduler: 
#         requests:
#             memory: "128Mi"
#             cpu: "25m"
#         limits:
#             memory: "256Mi"
#             cpu: "50m"
#     worker: 
#         requests:
#             memory: "128Mi"
#             cpu: "25m"
#         limits:
#             memory: "256Mi"
#             cpu: "50m"

# Overwrite database
database: {}

# Overwrite application config
application: {}

# Overwrite application rest config
application_rest: 
    nginx:
        image:
            name: nginx
            version: stable
            imagePullPolicy: IfNotPresent

# Overwrite scheduler config
application_scheduler: {}

# Overwrite worker config
application_worker: {}

##########################
# local sidecar
##########################
sidecar:
    rest_web:
        image:
            name: nginx
            version: stable
            imagePullPolicy: IfNotPresent
        resources: {}
        #     requests:
        #         memory: "128Mi"
        #         cpu: "25m"
        #     limits:
        #         memory: "256Mi"
        #         cpu: "50m"
    grpc: {} 
    rest: {}
    scheduler: {}
    worker: {}

##########################
# Local volumes
##########################
volumes:
    - name: timezone
      hostPath:
          path: /usr/share/zoneinfo/Asia/Seoul
    - name: log-volume
      emptyDir: {}

#######################
# global variable
#######################
global:
    shared: {}
    sidecar: []
#        - name: mongos
#          image: mongo:4.4.0-bionic
#          command: [ 'mongos', '--config', '/mnt/mongos.yml', '--bind_ip_all' ]
#          volumeMounts:
#            - name: mongos-conf
#              mountPath: /mnt/mongos.yml
#              subPath: mongos.yml
#              readOnly: true
#            - name: mongo-shard-key
#              mountPath: /opt/mongos/mongo-shard.pem
#              subPath: mongo-shard.pem
#              readOnly: true
#
    volumes: []
#        - name: mongo-shard-key
#          secret:
#              defaultMode: 0400
#              secretName: mongo-shard-key
#        - name: mongos-conf
#          configMap:
#              name: mongos-conf
#        - name: shared-conf
#          configMap:
#              name: shared-conf

    
# Service
service:
    rest:
        type: ClusterIP
        annotations:
            nil: nil
        ports:
            - name: rest
              port: 80
              targetPort: 80
              protocol: TCP

# Ingress (for )
ingress:
  rest:
    enabled: false
    annotations:
        alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
        alb.ingress.kubernetes.io/inbound-cidrs: 0.0.0.0/0 # replace or leave out
        alb.ingress.kubernetes.io/scheme: internet-facing
        alb.ingress.kubernetes.io/target-type: ip 
        alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:ap-northeast-2:111111111111:certificate/11111111-6c4c-414a-beab-fa87f44dd105"
        alb.ingress.kubernetes.io/healthcheck-path: "/check"
        alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=600
        external-dns.alpha.kubernetes.io/hostname: console-api-v2.example.com
    servicePort: 80
    path: /


################################
# volumeMount per deployment
################################
volumeMounts:
    application_grpc: []
    application_rest: []
    application_scheduler: []
    application_worker: []

####################################
# pod spec (append more pod spec)
# example nodeSelect
#
# pod:
#   spec:
#     nodeSelector:
#       application: my-node-group
####################################
pod:
    spec: {}
